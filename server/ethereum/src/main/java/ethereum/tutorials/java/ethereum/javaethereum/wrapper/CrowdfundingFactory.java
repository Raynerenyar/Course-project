package ethereum.tutorials.java.ethereum.javaethereum.wrapper;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.2.
 */
@SuppressWarnings("rawtypes")
public class CrowdfundingFactory extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b5061001a3361002c565b6003805460ff1916600117905561007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6128e18061008b6000396000f3fe60806040523480156200001157600080fd5b50600436106200009f5760003560e01c8063840e78fd116200006e578063840e78fd14620001195780638da5cb5b1462000140578063b7c58d7a146200015c578063b8da41f91462000173578063f2fde38b146200018b57600080fd5b806308af4d8814620000a4578063224b06bd14620000bd5780634120657a14620000d4578063715018a6146200010f575b600080fd5b620000bb620000b536600462000706565b620001a2565b005b620000bb620000ce366004620007a0565b620001f7565b620000fa620000e536600462000706565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b620000bb6200048d565b620001306200012a36600462000706565b620004a5565b60405162000106929190620008a2565b6000546040516001600160a01b03909116815260200162000106565b620000bb6200016d36600462000706565b6200055a565b620000bb6003805460ff19811660ff90911615179055565b620000bb6200019c36600462000706565b620005b0565b620001ac6200062f565b6001600160a01b03811660009081526002602052604090205460ff1615620001d357600080fd5b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b60035460ff1662000265573360009081526002602052604090205460ff161515600114620002655760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81a5cc81b9bdd08185b1b1bddd95960521b60448201526064015b60405180910390fd5b600030858585856040516200027a90620006db565b6200028a959493929190620008ce565b604051809103906000f080158015620002a7573d6000803e3d6000fd5b5090506001600160a01b038116620002be57600080fd5b60405163f2fde38b60e01b81523360048201526001600160a01b0382169063f2fde38b90602401600060405180830381600087803b1580156200030057600080fd5b505af115801562000315573d6000803e3d6000fd5b505050506001600160a01b0381166000908152600160205260409020806200033e8482620009a4565b50818160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060008490507f9bf072edfb6b558ebf0f6c8f312ffea6af006bdceb5ca2da5cf73d2b858777638333868a8a8a876001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620003d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003fd919081019062000a71565b886001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200043c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000466919081019062000a71565b6040516200047c98979695949392919062000af1565b60405180910390a150505050505050565b620004976200062f565b620004a360006200068b565b565b600160205260009081526040902080548190620004c29062000915565b80601f0160208091040260200160405190810160405280929190818152602001828054620004f09062000915565b8015620005415780601f10620005155761010080835404028352916020019162000541565b820191906000526020600020905b8154815290600101906020018083116200052357829003601f168201915b505050600190930154919250506001600160a01b031682565b620005646200062f565b6001600160a01b03811660009081526002602052604090205460ff1615156001146200058f57600080fd5b6001600160a01b03166000908152600260205260409020805460ff19169055565b620005ba6200062f565b6001600160a01b038116620006215760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200025c565b6200062c816200068b565b50565b6000546001600160a01b03163314620004a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200025c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611d3a8062000b7283390190565b80356001600160a01b03811681146200070157600080fd5b919050565b6000602082840312156200071957600080fd5b6200072482620006e9565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200076d576200076d6200072b565b604052919050565b600067ffffffffffffffff8211156200079257620007926200072b565b50601f01601f191660200190565b60008060008060808587031215620007b757600080fd5b8435935060208501359250620007d060408601620006e9565b9150606085013567ffffffffffffffff811115620007ed57600080fd5b8501601f81018713620007ff57600080fd5b803562000816620008108262000775565b62000741565b8181528860208385010111156200082c57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60005b838110156200086b57818101518382015260200162000851565b50506000910152565b600081518084526200088e8160208601602086016200084e565b601f01601f19169290920160200192915050565b604081526000620008b7604083018562000874565b905060018060a01b03831660208301529392505050565b6001600160a01b03868116825260208201869052604082018590528316606082015260a0608082018190526000906200090a9083018462000874565b979650505050505050565b600181811c908216806200092a57607f821691505b6020821081036200094b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200099f57600081815260208120601f850160051c810160208610156200097a5750805b601f850160051c820191505b818110156200099b5782815560010162000986565b5050505b505050565b815167ffffffffffffffff811115620009c157620009c16200072b565b620009d981620009d2845462000915565b8462000951565b602080601f83116001811462000a115760008415620009f85750858301515b600019600386901b1c1916600185901b1785556200099b565b600085815260208120601f198616915b8281101562000a425788860151825594840194600190910190840162000a21565b508582101562000a615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121562000a8457600080fd5b815167ffffffffffffffff81111562000a9c57600080fd5b8201601f8101841362000aae57600080fd5b805162000abf620008108262000775565b81815285602083850101111562000ad557600080fd5b62000ae88260208301602086016200084e565b95945050505050565b6001600160a01b03898116825288811660208301526101006040830181905260009162000b218483018b62000874565b915088606085015287608085015280871660a08501525082810360c084015262000b4c818662000874565b905082810360e084015262000b62818562000874565b9b9a505050505050505050505056fe6080604052620f4240600b553480156200001857600080fd5b5060405162001d3a38038062001d3a8339810160408190526200003b9162000499565b620000463362000177565b4283116200005357600080fd5b6200005e82620001c7565b620000b05760405162461bcd60e51b815260206004820152601d60248201527f416464726573732070726f7669646564206973206e6f7420746f6b656e00000060448201526064015b60405180910390fd5b813b6200010b5760405162461bcd60e51b815260206004820152602260248201527f416464726573732070726f7669646564206973206e6f74206120636f6e74726160448201526118dd60f21b6064820152608401620000a7565b6005620001198282620005a2565b5050600380546001600160a01b039586166001600160a01b03199182161790915560099390935560089190915560646007556001805483163317905560048054919093169082168117909255600280549091169091179055620006c8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516370a0823160e01b8152336004820152600090829082906001600160a01b038316906370a0823190602401602060405180830381865afa15801562000213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023991906200066e565b1015620002895760405162461bcd60e51b815260206004820152601460248201527f6d6574686f6420646f65736e27742065786973740000000000000000000000006044820152606401620000a7565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f091906200066e565b116200032d5760405162461bcd60e51b815260206004820152600b60248201526a0537570706c7920697320360ac1b6044820152606401620000a7565b6000816001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200036e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000398919081019062000688565b805190915015620003ad575060019392505050565b5060009392505050565b80516001600160a01b0381168114620003cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003fc57600080fd5b81516001600160401b0380821115620004195762000419620003d4565b604051601f8301601f19908116603f01168101908282118183101715620004445762000444620003d4565b816040528381526020925086838588010111156200046157600080fd5b600091505b8382101562000485578582018301518183018401529082019062000466565b600093810190920192909252949350505050565b600080600080600060a08688031215620004b257600080fd5b620004bd86620003b7565b94506020860151935060408601519250620004db60608701620003b7565b60808701519092506001600160401b03811115620004f857600080fd5b6200050688828901620003ea565b9150509295509295909350565b600181811c908216806200052857607f821691505b6020821081036200054957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200059d57600081815260208120601f850160051c81016020861015620005785750805b601f850160051c820191505b81811015620005995782815560010162000584565b5050505b505050565b81516001600160401b03811115620005be57620005be620003d4565b620005d681620005cf845462000513565b846200054f565b602080601f8311600181146200060e5760008415620005f55750858301515b600019600386901b1c1916600185901b17855562000599565b600085815260208120601f198616915b828110156200063f578886015182559484019460019091019084016200061e565b50858210156200065e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200068157600080fd5b5051919050565b6000602082840312156200069b57600080fd5b81516001600160401b03811115620006b257600080fd5b620006c084828501620003ea565b949350505050565b61166280620006d86000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063b2d5ae4411610097578063d42c48d111610071578063d42c48d1146103e8578063f2fde38b1461041e578063f851a44014610431578063fc0c546a1461044457600080fd5b8063b2d5ae44146103c4578063c1cbbca7146103cc578063c59ee1dc146103df57600080fd5b8063937e09b1116100d3578063937e09b11461037c5780639d76ea58146103855780639fb42b1f14610398578063a43b6fff146103a157600080fd5b8063715018a61461033e57806381d12c58146103465780638da5cb5b1461036b57600080fd5b8063379248e2116101665780634e260f6f116101405780634e260f6f146102e3578063537ec8ec146102ec57806355e1dedf146102ff5780635b8575a91461031257600080fd5b8063379248e2146102a257806340193883146102c55780634a79d50c146102ce57600080fd5b8063232af255116101a2578063232af2551461022b57806329dcb0cf146102565780632f0829f71461025f57806334b664601461028257600080fd5b806312065fe0146101c9578063180b7138146101e45780631b16bb5c14610216575b600080fd5b6101d1610457565b6040519081526020015b60405180910390f35b6101f76101f23660046111f0565b6104ce565b604080516001600160a01b0390931683526020830191909152016101db565b61022961022436600461123b565b610734565b005b60035461023e906001600160a01b031681565b6040516001600160a01b0390911681526020016101db565b6101d160085481565b6101d161026d3660046111f0565b6000908152600d602052604090206002015490565b6101d1610290366004611306565b600e6020526000908152604090205481565b6101d16102b03660046111f0565b6000908152600d602052604090206005015490565b6101d160095481565b6102d66107eb565b6040516101db919061136e565b6101d160065481565b6101d16102fa366004611381565b610879565b6102d661030d3660046111f0565b610b4c565b61023e6103203660046111f0565b6000908152600d60205260409020600101546001600160a01b031690565b610229610bee565b6103596103543660046111f0565b610c02565b6040516101db969594939291906113ad565b6000546001600160a01b031661023e565b6101d160075481565b60025461023e906001600160a01b031681565b6101d1600c5481565b6101d16103af3660046111f0565b6000908152600d602052604090206004015490565b6101d1610ccc565b6102296103da3660046111f0565b610eae565b6101d1600a5481565b61040e6103f63660046111f0565b6000908152600d602052604090206003015460ff1690565b60405190151581526020016101db565b61022961042c366004611306565b6110cd565b60015461023e906001600160a01b031681565b60045461023e906001600160a01b031681565b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c991906113f2565b905090565b6000806104d9611146565b600954600a54101561054a5760405162461bcd60e51b815260206004820152602f60248201527f726169736564416d6f756e74206d757374206265206d6f7265207468616e206f60448201526e1c88195c5d585b081d1bc819dbd85b608a1b60648201526084015b60405180910390fd5b6000838152600d60205260409020600381015460ff16156105ad5760405162461bcd60e51b815260206004820152601f60248201527f546865207265717565737420686173206265656e20636f6d706c657465642e006044820152606401610541565b600b54600590600a9081906105c29084611421565b6105cc9190611438565b83600501541161062e5760405162461bcd60e51b815260206004820152602760248201527f76616c7565206f6620766f746573206661696c20746f206d65657420726571756044820152661a5c995b595b9d60ca1b6064820152608401610541565b600183015460028401546004805460405163a9059cbb60e01b81526001600160a01b03948516928101839052602481018490529193169063a9059cbb906044016020604051808303816000875af115801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b1919061145a565b5060038501805460ff19166001179055604080513381526001600160a01b0384166020820152908101829052606081018990527fe8865f6295f774cc1f85678223321412003260525398a1d46e5e884a0f694a739060800160405180910390a15050505060018101546002909101546001600160a01b0390911694909350915050565b61073c611146565b600c80546000818152600d602052604081209192839161075b8361147c565b9091555081905061076c868261151e565b506001810180546001600160a01b0319166001600160a01b0386161790556002810183905560038101805460ff19169055600060048201556040517f6fbbe1619a744707cabdefa8c81690a643c946e64fd595a1126aa6d4bc27bba1906107dc90849033908990899089906115de565b60405180910390a15050505050565b600580546107f890611495565b80601f016020809104026020016040519081016040528092919081815260200182805461082490611495565b80156108715780601f1061084657610100808354040283529160200191610871565b820191906000526020600020905b81548152906001019060200180831161085457829003601f168201915b505050505081565b600082600c5410156108cd5760405162461bcd60e51b815260206004820152601760248201527f5265717565737420646f6573206e6f742065786973742e0000000000000000006044820152606401610541565b6000546001600160a01b03166001600160a01b0316826001600160a01b0316036109395760405162461bcd60e51b815260206004820181905260248201527f596f75277265206e6f7420616c6c6f77656420746f20636f6e747269627574656044820152606401610541565b6001600160a01b0382166000908152600e60205260409020546109a95760405162461bcd60e51b815260206004820152602260248201527f596f75206d757374206265206120636f6e7472696275746f7220746f20766f74604482015261652160f01b6064820152608401610541565b6000838152600d602090815260408083206001600160a01b0386168452600681019092529091205460ff1615610a1a5760405162461bcd60e51b8152602060048201526016602482015275165bdd481a185d9948185b1c9958591e481d9bdd195960521b6044820152606401610541565b60018101546001600160a01b0316610a745760405162461bcd60e51b815260206004820152601e60248201527f5265717565737420686173206e6f74206265656e20696e6974696174656400006044820152606401610541565b600954600b546001600160a01b0385166000908152600e6020526040812054909291610a9f91611421565b610aa99190611438565b905080826005016000828254610abf9190611619565b9091555050600482018054906000610ad68361147c565b90915550506001600160a01b0384166000908152600683016020908152604091829020805460ff1916600117905581513381529081018790529081018290527fcd200ea5ac0e92a5a67c5c682507511ae3086a331d103afb7eea291ae430d5999060600160405180910390a19150505b92915050565b6000818152600d60205260409020805460609190610b6990611495565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9590611495565b8015610be25780601f10610bb757610100808354040283529160200191610be2565b820191906000526020600020905b815481529060010190602001808311610bc557829003601f168201915b50505050509050919050565b610bf6611146565b610c0060006111a0565b565b600d60205260009081526040902080548190610c1d90611495565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4990611495565b8015610c965780601f10610c6b57610100808354040283529160200191610c96565b820191906000526020600020905b815481529060010190602001808311610c7957829003601f168201915b505050600184015460028501546003860154600487015460059097015495966001600160a01b039093169591945060ff16925086565b6000600854421015610d205760405162461bcd60e51b815260206004820152601760248201527f446561646c696e6520686173206e6f74207061737365640000000000000000006044820152606401610541565b600954600a5410610d735760405162461bcd60e51b815260206004820152601f60248201527f52616973656420616d6f756e74206973206d6f7265207468616e20676f616c006044820152606401610541565b336000908152600e6020526040902054610dcf5760405162461bcd60e51b815260206004820152601c60248201527f596f75206e65656420746f206265206120636f6e7472696275746572000000006044820152606401610541565b336000818152600e6020526040808220805492905560048054915163a9059cbb60e01b8152908101939093526024830182905290916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c919061145a565b50600454604080513381526001600160a01b03909216602083015281018290527ff7f394ee65e37c78e595ee4c8675e3832dff9a6cfc6a2c7405e3689f2a714c539060600160405180910390a1919050565b600754811015610f005760405162461bcd60e51b815260206004820152601c60248201527f6d696e696d756d20636f6e747269627574696f6e206e6f74206d6574000000006044820152606401610541565b60048054604051636eb1769f60e11b8152339281019290925230602483015282916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610f53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7791906113f2565b1015610fc55760405162461bcd60e51b815260206004820152601860248201527f746f6b656e207370656e64206e6f7420617070726f76656400000000000000006044820152606401610541565b336000908152600e60205260408120549003610fe5576006805460010190555b600480546040516323b872dd60e01b81523392810192909252306024830152604482018390526001600160a01b0316906323b872dd906064016020604051808303816000875af115801561103d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611061919061145a565b50336000818152600e6020908152604091829020805485019055600a80548501905560025482519384526001600160a01b03169083015281018290527f630c9eb89085cfe993245c555e78df45b0b8e8f31f411ddc400727738d9648349060600160405180910390a150565b6110d5611146565b6001600160a01b03811661113a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610541565b611143816111a0565b50565b6000546001600160a01b03163314610c005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610541565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561120257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461123657600080fd5b919050565b60008060006060848603121561125057600080fd5b833567ffffffffffffffff8082111561126857600080fd5b818601915086601f83011261127c57600080fd5b81358181111561128e5761128e611209565b604051601f8201601f19908116603f011681019083821181831017156112b6576112b6611209565b816040528281528960208487010111156112cf57600080fd5b8260208601602083013760006020848301015280975050505050506112f66020850161121f565b9150604084013590509250925092565b60006020828403121561131857600080fd5b6113218261121f565b9392505050565b6000815180845260005b8181101561134e57602081850181015186830182015201611332565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006113216020830184611328565b6000806040838503121561139457600080fd5b823591506113a46020840161121f565b90509250929050565b60c0815260006113c060c0830189611328565b6001600160a01b039790971660208301525060408101949094529115156060840152608083015260a090910152919050565b60006020828403121561140457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b4657610b4661140b565b60008261145557634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561146c57600080fd5b8151801515811461132157600080fd5b60006001820161148e5761148e61140b565b5060010190565b600181811c908216806114a957607f821691505b6020821081036114c957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561151957600081815260208120601f850160051c810160208610156114f65750805b601f850160051c820191505b8181101561151557828155600101611502565b5050505b505050565b815167ffffffffffffffff81111561153857611538611209565b61154c816115468454611495565b846114cf565b602080601f83116001811461158157600084156115695750858301515b600019600386901b1c1916600185901b178555611515565b600085815260208120601f198616915b828110156115b057888601518255948401946001909101908401611591565b50858210156115ce5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b858152600060018060a01b03808716602084015260a0604084015261160660a0840187611328565b9416606083015250608001529392505050565b80820180821115610b4657610b4661140b56fea26469706673582212200985cb5d2fd3e4322ce51eb0bfaac8393eb375737e73b459db8a1fa007b1118464736f6c63430008130033a264697066735822122088f859f736f32a7608ef7cb559bf4ac49163aa9ee7f3dd678ad164baa8baa65764736f6c63430008130033";

    public static final String FUNC_ALLOWEDADDRESSES = "allowedAddresses";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PROJECTS = "projects";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_CREATENEWPROJECT = "createNewProject";

    public static final String FUNC_ALLOWADDRESS = "allowAddress";

    public static final String FUNC_DISALLOWADDRESS = "disallowAddress";

    public static final String FUNC_TOGGLEFREEFORALL = "toggleFreeForAll";

    public static final Event CREATENEWPROJECTEVENT_EVENT = new Event("CreateNewProjectEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("1682088022222", "0x54512C4eCA85316325897ca17cBE42607A3fA25f");
        _addresses.put("1682521013939", "0xfc639d33180CaF0130fC82192223352F42D767f0");
        _addresses.put("1683753477720", "0xA76d3fa4085E319342Aa711D94B479A4bfEEF199");
        _addresses.put("1682945508705", "0xd287079a4306AA908812a37C548F9b5F190Cd712");
        _addresses.put("1683669823108", "0xA76d3fa4085E319342Aa711D94B479A4bfEEF199");
        _addresses.put("1682253456145", "0x352561fAd2ac8b5Ec1069A491fc7C899C9DFddB9");
        _addresses.put("1683448839706", "0x9dfD7b05c412aeC7DD92bE5B175f47DbA6335888");
        _addresses.put("1683813513105", "0xC2d3f7C684cf5208E57b11c8Dfdd912D7Bf200f0");
        _addresses.put("1682184089947", "0xb1aCB5619dfB74F136d931cDdFd7C3b2be6632CA");
        _addresses.put("1682251830018", "0x873af50dC52452Ba3927640AAB8D7ee8a49640C2");
    }

    @Deprecated
    protected CrowdfundingFactory(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrowdfundingFactory(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrowdfundingFactory(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrowdfundingFactory(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<CreateNewProjectEventEventResponse> getCreateNewProjectEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(CREATENEWPROJECTEVENT_EVENT, transactionReceipt);
        ArrayList<CreateNewProjectEventEventResponse> responses = new ArrayList<CreateNewProjectEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CreateNewProjectEventEventResponse typedResponse = new CreateNewProjectEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._title = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._goal = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._deadline = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse._tokenUsed = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.tokenName = (String) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.tokenSymbol = (String) eventValues.getNonIndexedValues().get(7).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CreateNewProjectEventEventResponse> createNewProjectEventEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, CreateNewProjectEventEventResponse>() {
            @Override
            public CreateNewProjectEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CREATENEWPROJECTEVENT_EVENT, log);
                CreateNewProjectEventEventResponse typedResponse = new CreateNewProjectEventEventResponse();
                typedResponse.log = log;
                typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._title = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._goal = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._deadline = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse._tokenUsed = (String) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse.tokenName = (String) eventValues.getNonIndexedValues().get(6).getValue();
                typedResponse.tokenSymbol = (String) eventValues.getNonIndexedValues().get(7).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CreateNewProjectEventEventResponse> createNewProjectEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CREATENEWPROJECTEVENT_EVENT));
        return createNewProjectEventEventFlowable(filter);
    }

    public static List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public RemoteFunctionCall<Boolean> allowedAddresses(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOWEDADDRESSES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple2<String, String>> projects(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROJECTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
        return new RemoteFunctionCall<Tuple2<String, String>>(function,
                new Callable<Tuple2<String, String>>() {
                    @Override
                    public Tuple2<String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createNewProject(BigInteger _goal, BigInteger _deadline, String _acceptingThisToken, String _title) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATENEWPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_goal), 
                new org.web3j.abi.datatypes.generated.Uint256(_deadline), 
                new org.web3j.abi.datatypes.Address(_acceptingThisToken), 
                new org.web3j.abi.datatypes.Utf8String(_title)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> allowAddress(String _allowThisAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ALLOWADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_allowThisAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> disallowAddress(String _disallowThisAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DISALLOWADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_disallowThisAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> toggleFreeForAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOGGLEFREEFORALL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrowdfundingFactory(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrowdfundingFactory(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrowdfundingFactory(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrowdfundingFactory(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class CreateNewProjectEventEventResponse extends BaseEventResponse {
        public String _projectAddress;

        public String _projectCreator;

        public String _title;

        public BigInteger _goal;

        public BigInteger _deadline;

        public String _tokenUsed;

        public String tokenName;

        public String tokenSymbol;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }
}
