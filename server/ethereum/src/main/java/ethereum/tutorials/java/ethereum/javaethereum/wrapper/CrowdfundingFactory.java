package ethereum.tutorials.java.ethereum.javaethereum.wrapper;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.2.
 */
@SuppressWarnings("rawtypes")
public class CrowdfundingFactory extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b5061001a3361002c565b6003805460ff1916600117905561007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6131538061008b6000396000f3fe60806040523480156200001157600080fd5b5060043610620001395760003560e01c8063840e78fd11620000bb578063beb80b55116200007a578063beb80b5514620002c3578063eb42cfd614620002ee578063f0bc79131462000305578063f2fde38b146200031c578063fb8c12fd146200033357600080fd5b8063840e78fd146200023b5780638da5cb5b14620002525780639a4c1d20146200026e578063b7c58d7a1462000294578063b8da41f914620002ab57600080fd5b806334fea02b116200010857806334fea02b14620001b55780633f3c2acd14620001cc5780634120657a14620001e3578063697761f4146200021a578063715018a6146200023157600080fd5b806301ae2ac6146200013e57806308af4d88146200015757806317a55e7a146200016e578063224b06bd146200019e575b600080fd5b620001556200014f366004620012a0565b6200034a565b005b620001556200016836600462001312565b620003fa565b620001856200017f36600462001312565b6200044f565b6040516200019592919062001386565b60405180910390f35b62000155620001af366004620013b2565b62000529565b62000155620001c63660046200141b565b620006f1565b62000155620001dd3660046200141b565b620007c3565b62000209620001f436600462001312565b60026020526000908152604090205460ff1681565b604051901515815260200162000195565b620001556200022b36600462001312565b620008fe565b6200015562000a30565b620001856200024c36600462001312565b62000a48565b6000546040516001600160a01b03909116815260200162000195565b620002856200027f36600462001312565b62000afd565b60405190815260200162000195565b62000155620002a536600462001312565b62000b6f565b620001556003805460ff19811660ff90911615179055565b620002da620002d43660046200141b565b62000bc5565b60405162000195969594939291906200144a565b62000285620002ff36600462001312565b62000e7c565b62000155620003163660046200141b565b62000ec1565b620001556200032d36600462001312565b62000fae565b62000155620003443660046200141b565b6200102d565b6040516306c5aed760e21b815284906001600160a01b03821690631b16bb5c906200037e9087908790879060040162001491565b600060405180830381600087803b1580156200039957600080fd5b505af1158015620003ae573d6000803e3d6000fd5b505050507fe66004a406970da67773dcce4ffbcd983d4f39ad5d082b5ac8d28f5b6d33322f8533868686604051620003eb959493929190620014c1565b60405180910390a15050505050565b62000404620010ff565b6001600160a01b03811660009081526002602052604090205460ff16156200042b57600080fd5b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6001600160a01b038116600090815260016020526040812080546060929182916200047a9062001500565b80601f0160208091040260200160405190810160405280929190818152602001828054620004a89062001500565b8015620004f95780601f10620004cd57610100808354040283529160200191620004f9565b820191906000526020600020905b815481529060010190602001808311620004db57829003601f168201915b505050506001600160a01b0395861660009081526001602081905260409091200154919691909516945092505050565b60035460ff1662000597573360009081526002602052604090205460ff161515600114620005975760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81a5cc81b9bdd08185b1b1bddd95960521b60448201526064015b60405180910390fd5b600030858585604051620005ab90620011ab565b6001600160a01b039485168152602081019390935260408301919091529091166060820152608001604051809103906000f080158015620005f0573d6000803e3d6000fd5b5090506001600160a01b0381166200060757600080fd5b60405163f2fde38b60e01b81523360048201526001600160a01b0382169063f2fde38b90602401600060405180830381600087803b1580156200064957600080fd5b505af11580156200065e573d6000803e3d6000fd5b505050506001600160a01b0381166000908152600160205260409020806200068784826200158f565b506001810180546001600160a01b0319166001600160a01b0384161790556040517ff41c170840f0e9caf42bdf62bfc03083a8eba49637a0eb46870689c09aef9cfe90620006e1908490339087908b908b908b906200165c565b60405180910390a1505050505050565b6040516314dfb23b60e21b81526004810182905233602482015282906000906001600160a01b0383169063537ec8ec906044016020604051808303816000875af115801562000744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200076a9190620016a8565b604080516001600160a01b0387168152336020820152908101859052606081018290529091507ff3a56e971f529b099ccbc34d164d7b546faba91dd2932192e621102f55ad42c69060800160405180910390a150505050565b6000829050600080826001600160a01b0316639d76ea586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200080a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008309190620016c2565b60405163060b0b0f60e41b8152600481018690523360248201529091506001600160a01b038416906360b0b0f0906044016020604051808303816000875af115801562000881573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a79190620016c2565b604080516001600160a01b0380891682528084166020830152841691810191909152606081018690529092507f2c66171f7058de28875cbb5513c7904722937c1f943988af3439f672b53351ea90608001620003eb565b604051631a5b163160e21b815233600482015281906000906001600160a01b0383169063696c58c4906024016020604051808303816000875af11580156200094a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009709190620016a8565b90507f1d3ce966e377eaf462bebd32a6f46bd405722fb2f7f1cc60338dbb64d9bf6e2c8333846001600160a01b0316639d76ea586040518163ffffffff1660e01b8152600401602060405180830381865afa158015620009d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009fa9190620016c2565b604080516001600160a01b03948516815292841660208401529216818301526060810184905290519081900360800190a1505050565b62000a3a620010ff565b62000a4660006200115b565b565b60016020526000908152604090208054819062000a659062001500565b80601f016020809104026020016040519081016040528092919081815260200182805462000a939062001500565b801562000ae45780601f1062000ab85761010080835404028352916020019162000ae4565b820191906000526020600020905b81548152906001019060200180831162000ac657829003601f168201915b505050600190930154919250506001600160a01b031682565b600080829050806001600160a01b03166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b42573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b689190620016a8565b9392505050565b62000b79620010ff565b6001600160a01b03811660009081526002602052604090205460ff16151560011462000ba457600080fd5b6001600160a01b03166000908152600260205260409020805460ff19169055565b6060600080600080600080889050806001600160a01b03166355e1dedf896040518263ffffffff1660e01b815260040162000c0291815260200190565b600060405180830381865afa15801562000c20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c4a9190810190620016e2565b604051635b8575a960e01b8152600481018a90526001600160a01b03831690635b8575a990602401602060405180830381865afa15801562000c90573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cb69190620016c2565b604051632f0829f760e01b8152600481018b90526001600160a01b03841690632f0829f790602401602060405180830381865afa15801562000cfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d229190620016a8565b60405163d42c48d160e01b8152600481018c90526001600160a01b0385169063d42c48d190602401602060405180830381865afa15801562000d68573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d8e919062001762565b60405163a43b6fff60e01b8152600481018d90526001600160a01b0386169063a43b6fff90602401602060405180830381865afa15801562000dd4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dfa9190620016a8565b604051631bc9247160e11b8152600481018e90526001600160a01b0387169063379248e290602401602060405180830381865afa15801562000e40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e669190620016a8565b949e939d50919b50995097509095509350505050565b600080829050806001600160a01b0316639fb42b1f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b42573d6000803e3d6000fd5b60008290506000816001600160a01b0316639d76ea586040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f2d9190620016c2565b60405163095ea7b360e01b81526001600160a01b038681166004830152602482018690529192509082169063095ea7b3906044016020604051808303816000875af115801562000f81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa7919062001762565b5050505050565b62000fb8620010ff565b6001600160a01b0381166200101f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200058e565b6200102a816200115b565b50565b6040516303016e2760e31b815260048101829052829060009081906001600160a01b0384169063180b71389060240160408051808303816000875af11580156200107b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010a1919062001786565b604080516001600160a01b03808a168252336020830152841691810191909152606081018290526080810187905291935091507f27cbf2b848feecebbc7ddc885cb428dbd045e820f554ba83b93a225fe0b0b16b9060a001620003eb565b6000546001600160a01b0316331462000a465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200058e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61196680620017b883390190565b6001600160a01b03811681146200102a57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620012115762001211620011cf565b604052919050565b600067ffffffffffffffff821115620012365762001236620011cf565b50601f01601f191660200190565b600082601f8301126200125657600080fd5b81356200126d620012678262001219565b620011e5565b8181528460208386010111156200128357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215620012b757600080fd5b8435620012c481620011b9565b9350602085013567ffffffffffffffff811115620012e157600080fd5b620012ef8782880162001244565b93505060408501356200130281620011b9565b9396929550929360600135925050565b6000602082840312156200132557600080fd5b813562000b6881620011b9565b60005b838110156200134f57818101518382015260200162001335565b50506000910152565b600081518084526200137281602086016020860162001332565b601f01601f19169290920160200192915050565b6040815260006200139b604083018562001358565b905060018060a01b03831660208301529392505050565b60008060008060808587031215620013c957600080fd5b84359350602085013592506040850135620013e481620011b9565b9150606085013567ffffffffffffffff8111156200140157600080fd5b6200140f8782880162001244565b91505092959194509250565b600080604083850312156200142f57600080fd5b82356200143c81620011b9565b946020939093013593505050565b60c0815260006200145f60c083018962001358565b6001600160a01b039790971660208301525060408101949094529115156060840152608083015260a090910152919050565b606081526000620014a6606083018662001358565b6001600160a01b039490941660208301525060400152919050565b600060018060a01b038088168352808716602084015260a06040840152620014ed60a084018762001358565b9416606083015250608001529392505050565b600181811c908216806200151557607f821691505b6020821081036200153657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200158a57600081815260208120601f850160051c81016020861015620015655750805b601f850160051c820191505b81811015620015865782815560010162001571565b5050505b505050565b815167ffffffffffffffff811115620015ac57620015ac620011cf565b620015c481620015bd845462001500565b846200153c565b602080601f831160018114620015fc5760008415620015e35750858301515b600019600386901b1c1916600185901b17855562001586565b600085815260208120601f198616915b828110156200162d578886015182559484019460019091019084016200160c565b50858210156200164c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018060a01b038089168352808816602084015260c060408401526200168860c084018862001358565b6060840196909652608083019490945250911660a0909101529392505050565b600060208284031215620016bb57600080fd5b5051919050565b600060208284031215620016d557600080fd5b815162000b6881620011b9565b600060208284031215620016f557600080fd5b815167ffffffffffffffff8111156200170d57600080fd5b8201601f810184136200171f57600080fd5b805162001730620012678262001219565b8181528560208385010111156200174657600080fd5b6200175982602083016020860162001332565b95945050505050565b6000602082840312156200177557600080fd5b8151801515811462000b6857600080fd5b600080604083850312156200179a57600080fd5b8251620017a781620011b9565b602093909301519294929350505056fe6080604052620f4240600a553480156200001857600080fd5b5060405162001966380380620019668339810160408190526200003b91620003c4565b620000463362000167565b4282116200005357600080fd5b6200005e81620001b7565b620000b05760405162461bcd60e51b815260206004820152601d60248201527f416464726573732070726f7669646564206973206e6f7420746f6b656e00000060448201526064015b60405180910390fd5b803b6200010b5760405162461bcd60e51b815260206004820152602260248201527f416464726573732070726f7669646564206973206e6f74206120636f6e74726160448201526118dd60f21b6064820152608401620000a7565b600380546001600160a01b039586166001600160a01b0319918216179091556008939093556007919091556064600655600180548316331790556004805491909316908216811790925560028054909116909117905562000514565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516370a0823160e01b8152336004820152600090829082906001600160a01b038316906370a0823190602401602060405180830381865afa15801562000203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022991906200040f565b1015620002795760405162461bcd60e51b815260206004820152601460248201527f6d6574686f6420646f65736e27742065786973740000000000000000000000006044820152606401620000a7565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e091906200040f565b116200031d5760405162461bcd60e51b815260206004820152600b60248201526a0537570706c7920697320360ac1b6044820152606401620000a7565b6000816001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200035e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200038891908101906200043f565b8051909150156200039d575060019392505050565b5060009392505050565b80516001600160a01b0381168114620003bf57600080fd5b919050565b60008060008060808587031215620003db57600080fd5b620003e685620003a7565b935060208501519250604085015191506200040460608601620003a7565b905092959194509250565b6000602082840312156200042257600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200045357600080fd5b82516001600160401b03808211156200046b57600080fd5b818501915085601f8301126200048057600080fd5b81518181111562000495576200049562000429565b604051601f8201601f19908116603f01168101908382118183101715620004c057620004c062000429565b816040528281528886848701011115620004d957600080fd5b600093505b82841015620004fd5784840186015181850187015292850192620004de565b600086848301015280965050505050505092915050565b61144280620005246000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806360b0b0f0116100f95780639fb42b1f11610097578063d42c48d111610071578063d42c48d1146103d0578063f2fde38b14610406578063f851a44014610419578063fc0c546a1461042c57600080fd5b80639fb42b1f1461039b578063a43b6fff146103a4578063c59ee1dc146103c757600080fd5b806381d12c58116100d357806381d12c58146103495780638da5cb5b1461036e578063937e09b11461037f5780639d76ea581461038857600080fd5b806360b0b0f01461031b578063696c58c41461032e578063715018a61461034157600080fd5b806334b66460116101665780634e260f6f116101405780634e260f6f146102b3578063537ec8ec146102bc57806355e1dedf146102cf5780635b8575a9146102ef57600080fd5b806334b6646014610267578063379248e21461028757806340193883146102aa57600080fd5b806312065fe0146101ae578063180b7138146101c95780631b16bb5c146101fb578063232af2551461021057806329dcb0cf1461023b5780632f0829f714610244575b600080fd5b6101b661043f565b6040519081526020015b60405180910390f35b6101dc6101d7366004610fc2565b6104b6565b604080516001600160a01b0390931683526020830191909152016101c0565b61020e61020936600461100d565b61071a565b005b600354610223906001600160a01b031681565b6040516001600160a01b0390911681526020016101c0565b6101b660075481565b6101b6610252366004610fc2565b6000908152600c602052604090206002015490565b6101b66102753660046110d8565b600d6020526000908152604090205481565b6101b6610295366004610fc2565b6000908152600c602052604090206005015490565b6101b660085481565b6101b660055481565b6101b66102ca3660046110fa565b6107c7565b6102e26102dd366004610fc2565b610a59565b6040516101c0919061116c565b6102236102fd366004610fc2565b6000908152600c60205260409020600101546001600160a01b031690565b6102236103293660046110fa565b610afb565b6101b661033c3660046110d8565b610ceb565b61020e610dc1565b61035c610357366004610fc2565b610dd5565b6040516101c09695949392919061117f565b6000546001600160a01b0316610223565b6101b660065481565b600254610223906001600160a01b031681565b6101b6600b5481565b6101b66103b2366004610fc2565b6000908152600c602052604090206004015490565b6101b660095481565b6103f66103de366004610fc2565b6000908152600c602052604090206003015460ff1690565b60405190151581526020016101c0565b61020e6104143660046110d8565b610e9f565b600154610223906001600160a01b031681565b600454610223906001600160a01b031681565b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b191906111c4565b905090565b6000806104cb6000546001600160a01b031690565b6001600160a01b0316336001600160a01b031614806104f457506003546001600160a01b031633145b6105195760405162461bcd60e51b8152600401610510906111dd565b60405180910390fd5b60085460095410156105855760405162461bcd60e51b815260206004820152602f60248201527f726169736564416d6f756e74206d757374206265206d6f7265207468616e206f60448201526e1c88195c5d585b081d1bc819dbd85b608a1b6064820152608401610510565b6000838152600c60205260409020600381015460ff16156105e85760405162461bcd60e51b815260206004820152601f60248201527f546865207265717565737420686173206265656e20636f6d706c657465642e006044820152606401610510565b600a80546005919081906105fc908461123c565b6106069190611253565b8360050154116106685760405162461bcd60e51b815260206004820152602760248201527f76616c7565206f6620766f746573206661696c20746f206d65657420726571756044820152661a5c995b595b9d60ca1b6064820152608401610510565b600480546001850154600286015460405163a9059cbb60e01b81526001600160a01b03928316948101949094526024840152169063a9059cbb906044016020604051808303816000875af11580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190611275565b50505060038101805460ff191660019081179091558101546002909101546001600160a01b0390911692509050915091565b6000546001600160a01b031633148061073d57506003546001600160a01b031633145b6107595760405162461bcd60e51b8152600401610510906111dd565b600b80546000818152600c60205260408120929061077683611297565b909155508190506107878582611339565b506001810180546001600160a01b0319166001600160a01b039490941693909317909255600282015560038101805460ff19169055600060049091015550565b600082600b54101561081b5760405162461bcd60e51b815260206004820152601760248201527f5265717565737420646f6573206e6f742065786973742e0000000000000000006044820152606401610510565b6000546001600160a01b03166001600160a01b0316826001600160a01b0316036108875760405162461bcd60e51b815260206004820181905260248201527f596f75277265206e6f7420616c6c6f77656420746f20636f6e747269627574656044820152606401610510565b6001600160a01b0382166000908152600d60205260409020546108f75760405162461bcd60e51b815260206004820152602260248201527f596f75206d757374206265206120636f6e7472696275746f7220746f20766f74604482015261652160f01b6064820152608401610510565b6000838152600c602090815260408083206001600160a01b0386168452600681019092529091205460ff16156109685760405162461bcd60e51b8152602060048201526016602482015275165bdd481a185d9948185b1c9958591e481d9bdd195960521b6044820152606401610510565b60018101546001600160a01b03166109c25760405162461bcd60e51b815260206004820152601e60248201527f5265717565737420686173206e6f74206265656e20696e6974696174656400006044820152606401610510565b600854600a546001600160a01b0385166000908152600d60205260408120549092916109ed9161123c565b6109f79190611253565b905080826005016000828254610a0d91906113f9565b9091555050600482018054906000610a2483611297565b90915550506001600160a01b038416600090815260069092016020526040909120805460ff1916600117905590505b92915050565b6000818152600c60205260409020805460609190610a76906112b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa2906112b0565b8015610aef5780601f10610ac457610100808354040283529160200191610aef565b820191906000526020600020905b815481529060010190602001808311610ad257829003601f168201915b50505050509050919050565b6000600654831015610b4f5760405162461bcd60e51b815260206004820152601c60248201527f6d696e696d756d20636f6e747269627574696f6e206e6f74206d6574000000006044820152606401610510565b60048054604051636eb1769f60e11b81526001600160a01b038581169382019390935230602482015285929091169063dd62ed3e90604401602060405180830381865afa158015610ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc891906111c4565b1015610c165760405162461bcd60e51b815260206004820152601860248201527f746f6b656e207370656e64206e6f7420617070726f76656400000000000000006044820152606401610510565b6001600160a01b0382166000908152600d60205260408120549003610c3f576005805460010190555b600480546040516323b872dd60e01b81526001600160a01b0385811693820193909352306024820152604481018690529116906323b872dd906064016020604051808303816000875af1158015610c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbe9190611275565b50506001600160a01b0381166000908152600d602052604090208054830190556009805490920190915590565b60006007544210158015610d025750600854600954105b610d0b57600080fd5b6001600160a01b0382166000908152600d6020526040902054610d2d57600080fd5b6001600160a01b038281166000818152600d6020526040808220805492905560048054915163a9059cbb60e01b815290810193909352602483018290529092169063a9059cbb906044016020604051808303816000875af1158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba9190611275565b5092915050565b610dc9610f18565b610dd36000610f72565b565b600c60205260009081526040902080548190610df0906112b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1c906112b0565b8015610e695780601f10610e3e57610100808354040283529160200191610e69565b820191906000526020600020905b815481529060010190602001808311610e4c57829003601f168201915b505050600184015460028501546003860154600487015460059097015495966001600160a01b039093169591945060ff16925086565b610ea7610f18565b6001600160a01b038116610f0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610510565b610f1581610f72565b50565b6000546001600160a01b03163314610dd35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610510565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610fd457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461100857600080fd5b919050565b60008060006060848603121561102257600080fd5b833567ffffffffffffffff8082111561103a57600080fd5b818601915086601f83011261104e57600080fd5b81358181111561106057611060610fdb565b604051601f8201601f19908116603f0116810190838211818310171561108857611088610fdb565b816040528281528960208487010111156110a157600080fd5b8260208601602083013760006020848301015280975050505050506110c860208501610ff1565b9150604084013590509250925092565b6000602082840312156110ea57600080fd5b6110f382610ff1565b9392505050565b6000806040838503121561110d57600080fd5b8235915061111d60208401610ff1565b90509250929050565b6000815180845260005b8181101561114c57602081850181015186830182015201611130565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110f36020830184611126565b60c08152600061119260c0830189611126565b6001600160a01b039790971660208301525060408101949094529115156060840152608083015260a090910152919050565b6000602082840312156111d657600080fd5b5051919050565b60208082526029908201527f596f7520617265206e65697468657220746865206f776e6572206e6f722074686040820152686520666163746f727960b81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610a5357610a53611226565b60008261127057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561128757600080fd5b815180151581146110f357600080fd5b6000600182016112a9576112a9611226565b5060010190565b600181811c908216806112c457607f821691505b6020821081036112e457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561133457600081815260208120601f850160051c810160208610156113115750805b601f850160051c820191505b818110156113305782815560010161131d565b5050505b505050565b815167ffffffffffffffff81111561135357611353610fdb565b6113678161136184546112b0565b846112ea565b602080601f83116001811461139c57600084156113845750858301515b600019600386901b1c1916600185901b178555611330565b600085815260208120601f198616915b828110156113cb578886015182559484019460019091019084016113ac565b50858210156113e95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610a5357610a5361122656fea26469706673582212208670440a59df3e1b6419b101c41a6ca024fe1caf677fa5b15f3fdd042ab7fbc564736f6c63430008130033a2646970667358221220909f6318f7aab8424bcec54c29985e3b35f5e035fcbaebaadeb2cf5fa2f3cc3364736f6c63430008130033";

    public static final String FUNC_ALLOWEDADDRESSES = "allowedAddresses";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PROJECTS = "projects";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_CREATENEWPROJECT = "createNewProject";

    public static final String FUNC_CONTRIBUTETOPROJECT = "contributeToProject";

    public static final String FUNC_GETBALANCEOFPROJECT = "getBalanceOfProject";

    public static final String FUNC_GETREFUNDFROMPROJECT = "getRefundFromProject";

    public static final String FUNC_CREATEREQUESTFORPROJECT = "createRequestForProject";

    public static final String FUNC_VOTEREQUESTFORPROJECT = "voteRequestForProject";

    public static final String FUNC_RECEIVECONTRIBUTIONFROMPROJECT = "receiveContributionFromProject";

    public static final String FUNC_ALLOWADDRESS = "allowAddress";

    public static final String FUNC_DISALLOWADDRESS = "disallowAddress";

    public static final String FUNC_GETREQUESTOFPROJECT = "getRequestOfProject";

    public static final String FUNC_GETNUMOFREQUESTOFPROJECT = "getNumOfRequestOfProject";

    public static final String FUNC_GETTITLEOFPROJECT = "getTitleOfProject";

    public static final String FUNC_TOGGLEFREEFORALL = "toggleFreeForAll";

    public static final String FUNC_APPROVETOKENFORPROJECT = "approveTokenForProject";

    public static final Event CONTRIBUTETOPROJECTEVENT_EVENT = new Event("ContributeToProjectEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event CREATENEWPROJECTEVENT_EVENT = new Event("CreateNewProjectEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event CREATEREQUESTFORPROJECTEVENT_EVENT = new Event("CreateRequestForProjectEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event GETREFUNDFROMPROJECTEVENT_EVENT = new Event("GetRefundFromProjectEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event RECEIVECONTRIBUTIONFROMPROJECTEVENT_EVENT = new Event("ReceiveContributionFromProjectEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event VOTEREQUESTFORPROJECTEVENT_EVENT = new Event("voteRequestForProjectEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("1682088022222", "0x54512C4eCA85316325897ca17cBE42607A3fA25f");
        _addresses.put("1682253456145", "0x352561fAd2ac8b5Ec1069A491fc7C899C9DFddB9");
        _addresses.put("1682184089947", "0xb1aCB5619dfB74F136d931cDdFd7C3b2be6632CA");
        _addresses.put("1682251830018", "0x873af50dC52452Ba3927640AAB8D7ee8a49640C2");
    }

    @Deprecated
    protected CrowdfundingFactory(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrowdfundingFactory(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrowdfundingFactory(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrowdfundingFactory(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<ContributeToProjectEventEventResponse> getContributeToProjectEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(CONTRIBUTETOPROJECTEVENT_EVENT, transactionReceipt);
        ArrayList<ContributeToProjectEventEventResponse> responses = new ArrayList<ContributeToProjectEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ContributeToProjectEventEventResponse typedResponse = new ContributeToProjectEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._contributor = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._tokenAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ContributeToProjectEventEventResponse> contributeToProjectEventEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ContributeToProjectEventEventResponse>() {
            @Override
            public ContributeToProjectEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CONTRIBUTETOPROJECTEVENT_EVENT, log);
                ContributeToProjectEventEventResponse typedResponse = new ContributeToProjectEventEventResponse();
                typedResponse.log = log;
                typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._contributor = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._tokenAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ContributeToProjectEventEventResponse> contributeToProjectEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CONTRIBUTETOPROJECTEVENT_EVENT));
        return contributeToProjectEventEventFlowable(filter);
    }

    public static List<CreateNewProjectEventEventResponse> getCreateNewProjectEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(CREATENEWPROJECTEVENT_EVENT, transactionReceipt);
        ArrayList<CreateNewProjectEventEventResponse> responses = new ArrayList<CreateNewProjectEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CreateNewProjectEventEventResponse typedResponse = new CreateNewProjectEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._title = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._goal = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._deadline = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse._tokenUsed = (String) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CreateNewProjectEventEventResponse> createNewProjectEventEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, CreateNewProjectEventEventResponse>() {
            @Override
            public CreateNewProjectEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CREATENEWPROJECTEVENT_EVENT, log);
                CreateNewProjectEventEventResponse typedResponse = new CreateNewProjectEventEventResponse();
                typedResponse.log = log;
                typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._title = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._goal = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._deadline = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse._tokenUsed = (String) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CreateNewProjectEventEventResponse> createNewProjectEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CREATENEWPROJECTEVENT_EVENT));
        return createNewProjectEventEventFlowable(filter);
    }

    public static List<CreateRequestForProjectEventEventResponse> getCreateRequestForProjectEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(CREATEREQUESTFORPROJECTEVENT_EVENT, transactionReceipt);
        ArrayList<CreateRequestForProjectEventEventResponse> responses = new ArrayList<CreateRequestForProjectEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CreateRequestForProjectEventEventResponse typedResponse = new CreateRequestForProjectEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._title = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._recipient = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CreateRequestForProjectEventEventResponse> createRequestForProjectEventEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, CreateRequestForProjectEventEventResponse>() {
            @Override
            public CreateRequestForProjectEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CREATEREQUESTFORPROJECTEVENT_EVENT, log);
                CreateRequestForProjectEventEventResponse typedResponse = new CreateRequestForProjectEventEventResponse();
                typedResponse.log = log;
                typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._title = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._recipient = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CreateRequestForProjectEventEventResponse> createRequestForProjectEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CREATEREQUESTFORPROJECTEVENT_EVENT));
        return createRequestForProjectEventEventFlowable(filter);
    }

    public static List<GetRefundFromProjectEventEventResponse> getGetRefundFromProjectEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(GETREFUNDFROMPROJECTEVENT_EVENT, transactionReceipt);
        ArrayList<GetRefundFromProjectEventEventResponse> responses = new ArrayList<GetRefundFromProjectEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            GetRefundFromProjectEventEventResponse typedResponse = new GetRefundFromProjectEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._contributor = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._RefundToken = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._RefundAmount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<GetRefundFromProjectEventEventResponse> getRefundFromProjectEventEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, GetRefundFromProjectEventEventResponse>() {
            @Override
            public GetRefundFromProjectEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(GETREFUNDFROMPROJECTEVENT_EVENT, log);
                GetRefundFromProjectEventEventResponse typedResponse = new GetRefundFromProjectEventEventResponse();
                typedResponse.log = log;
                typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._contributor = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._RefundToken = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._RefundAmount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<GetRefundFromProjectEventEventResponse> getRefundFromProjectEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(GETREFUNDFROMPROJECTEVENT_EVENT));
        return getRefundFromProjectEventEventFlowable(filter);
    }

    public static List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public static List<ReceiveContributionFromProjectEventEventResponse> getReceiveContributionFromProjectEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(RECEIVECONTRIBUTIONFROMPROJECTEVENT_EVENT, transactionReceipt);
        ArrayList<ReceiveContributionFromProjectEventEventResponse> responses = new ArrayList<ReceiveContributionFromProjectEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ReceiveContributionFromProjectEventEventResponse typedResponse = new ReceiveContributionFromProjectEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._recipient = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._requestNo = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ReceiveContributionFromProjectEventEventResponse> receiveContributionFromProjectEventEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ReceiveContributionFromProjectEventEventResponse>() {
            @Override
            public ReceiveContributionFromProjectEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECEIVECONTRIBUTIONFROMPROJECTEVENT_EVENT, log);
                ReceiveContributionFromProjectEventEventResponse typedResponse = new ReceiveContributionFromProjectEventEventResponse();
                typedResponse.log = log;
                typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._projectCreator = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._recipient = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._requestNo = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ReceiveContributionFromProjectEventEventResponse> receiveContributionFromProjectEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECEIVECONTRIBUTIONFROMPROJECTEVENT_EVENT));
        return receiveContributionFromProjectEventEventFlowable(filter);
    }

    public static List<VoteRequestForProjectEventEventResponse> getVoteRequestForProjectEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTEREQUESTFORPROJECTEVENT_EVENT, transactionReceipt);
        ArrayList<VoteRequestForProjectEventEventResponse> responses = new ArrayList<VoteRequestForProjectEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteRequestForProjectEventEventResponse typedResponse = new VoteRequestForProjectEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._voter = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._requestNo = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._valueOfVote = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VoteRequestForProjectEventEventResponse> voteRequestForProjectEventEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VoteRequestForProjectEventEventResponse>() {
            @Override
            public VoteRequestForProjectEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTEREQUESTFORPROJECTEVENT_EVENT, log);
                VoteRequestForProjectEventEventResponse typedResponse = new VoteRequestForProjectEventEventResponse();
                typedResponse.log = log;
                typedResponse._projectAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._voter = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._requestNo = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._valueOfVote = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VoteRequestForProjectEventEventResponse> voteRequestForProjectEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTEREQUESTFORPROJECTEVENT_EVENT));
        return voteRequestForProjectEventEventFlowable(filter);
    }

    public RemoteFunctionCall<Boolean> allowedAddresses(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOWEDADDRESSES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple2<String, String>> projects(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROJECTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
        return new RemoteFunctionCall<Tuple2<String, String>>(function,
                new Callable<Tuple2<String, String>>() {
                    @Override
                    public Tuple2<String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createNewProject(BigInteger _goal, BigInteger _deadline, String _acceptingThisToken, String _title) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATENEWPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_goal), 
                new org.web3j.abi.datatypes.generated.Uint256(_deadline), 
                new org.web3j.abi.datatypes.Address(_acceptingThisToken), 
                new org.web3j.abi.datatypes.Utf8String(_title)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> contributeToProject(String _projectAddress, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CONTRIBUTETOPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getBalanceOfProject(String _projectAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBALANCEOFPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> getRefundFromProject(String _projectAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETREFUNDFROMPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createRequestForProject(String _projectAddress, String _title, String _recipient, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEREQUESTFORPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress), 
                new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.Address(_recipient), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> voteRequestForProject(String _projectAddress, BigInteger _requestNo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTEREQUESTFORPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(_requestNo)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> receiveContributionFromProject(String _projectAddress, BigInteger _requestNo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RECEIVECONTRIBUTIONFROMPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(_requestNo)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> allowAddress(String _allowThisAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ALLOWADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_allowThisAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> disallowAddress(String _disallowThisAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DISALLOWADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_disallowThisAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple6<String, String, BigInteger, Boolean, BigInteger, BigInteger>> getRequestOfProject(String _projectAddress, BigInteger _requestNo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETREQUESTOFPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(_requestNo)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple6<String, String, BigInteger, Boolean, BigInteger, BigInteger>>(function,
                new Callable<Tuple6<String, String, BigInteger, Boolean, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple6<String, String, BigInteger, Boolean, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<String, String, BigInteger, Boolean, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (Boolean) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getNumOfRequestOfProject(String _projectAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFREQUESTOFPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple2<String, String>> getTitleOfProject(String _projectAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETTITLEOFPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
        return new RemoteFunctionCall<Tuple2<String, String>>(function,
                new Callable<Tuple2<String, String>>() {
                    @Override
                    public Tuple2<String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> toggleFreeForAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOGGLEFREEFORALL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> approveTokenForProject(String _projectAddress, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVETOKENFORPROJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_projectAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrowdfundingFactory(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrowdfundingFactory(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrowdfundingFactory(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrowdfundingFactory load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrowdfundingFactory(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CrowdfundingFactory> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CrowdfundingFactory.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class ContributeToProjectEventEventResponse extends BaseEventResponse {
        public String _projectAddress;

        public String _contributor;

        public String _tokenAddress;

        public BigInteger _amount;
    }

    public static class CreateNewProjectEventEventResponse extends BaseEventResponse {
        public String _projectAddress;

        public String _projectCreator;

        public String _title;

        public BigInteger _goal;

        public BigInteger _deadline;

        public String _tokenUsed;
    }

    public static class CreateRequestForProjectEventEventResponse extends BaseEventResponse {
        public String _projectAddress;

        public String _projectCreator;

        public String _title;

        public String _recipient;

        public BigInteger _amount;
    }

    public static class GetRefundFromProjectEventEventResponse extends BaseEventResponse {
        public String _projectAddress;

        public String _contributor;

        public String _RefundToken;

        public BigInteger _RefundAmount;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class ReceiveContributionFromProjectEventEventResponse extends BaseEventResponse {
        public String _projectAddress;

        public String _projectCreator;

        public String _recipient;

        public BigInteger _amount;

        public BigInteger _requestNo;
    }

    public static class VoteRequestForProjectEventEventResponse extends BaseEventResponse {
        public String _projectAddress;

        public String _voter;

        public BigInteger _requestNo;

        public BigInteger _valueOfVote;
    }
}
